language: c++
sudo: false
dist: trusty
osx_image: xcode9.4
services:
- docker
matrix:
  include:
  - os: osx
    env: IMAGE=OSX
    sudo: true
  - os: linux
    env: IMAGE=ubuntu:16.04
  - os: linux
    env: IMAGE=ubuntu:18.04
  - os: linux
    env: IMAGE=i386/ubuntu:16.04
env:
  global:
  - BUILD_NUMBER=${TRAVIS_BUILD_NUMBER}

before_install:
- git submodule update --init --recursive && if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    brew update && brew install --force qt5 openssl;
    curl -s --location "https://github.com/open-eid/libdigidoc/releases/download/v3.10.3/libdigidoc_3.10.3.1214.pkg" -o libdigidoc.pkg;
    curl -s --location "https://github.com/open-eid/libdigidocpp/releases/download/v3.13.6/libdigidocpp_3.13.6.1371.pkg" -o libdigidocpp.pkg;
    curl -s --location "https://github.com/open-eid/esteid-pkcs11/releases/download/v3.10.1/esteid-pkcs11_3.10.1.64.pkg" -o esteid-pkcs11.pkg;
    sudo installer -verboseR -pkg libdigidoc.pkg -target /;
    sudo installer -verboseR -pkg libdigidocpp.pkg -target /;
    sudo installer -verboseR -pkg esteid-pkcs11.pkg -target /;
  fi
script: if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
    mkdir build && cd build && cmake -DQt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5 -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_EXE_LINKER_FLAGS="-F/Library/Frameworks" ..;
    make zipdebug macdeployqt zip && cd ..;
  else
    docker run -e BUILD_NUMBER=${BUILD_NUMBER} -e COVERITY_SCAN_TOKEN=${COVERITY_SCAN_TOKEN} -e TRAVIS_BRANCH=${TRAVIS_BRANCH} -e IMAGE=${IMAGE} -v ${HOME}:${HOME} -t "${IMAGE}" /bin/bash -c "cd $(pwd);"'
      apt-get update -qq;
      apt-get install -y apt-transport-https curl dh-make devscripts cdbs cmake libldap2-dev gettext libpcsclite-dev libssl-dev qttools5-dev-tools qttools5-dev git curl wget ruby;
      curl https://installer.id.ee/media/install-scripts/ria-public.key | apt-key add -;
      curl https://installer.id.ee/media/install-scripts/C6C83D68.pub | apt-key add -;
      echo "deb http://installer.id.ee/media/ubuntu/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/repo.list;
      apt-get update -qq;
      apt-get install -y libdigidocpp-dev;
      export VERSION=$(grep project CMakeLists.txt | egrep -o "([0-9]{1,}\.)+[0-9]{1,}").${BUILD_NUMBER};
      export DEBFULLNAME="Travis";
      export DEBEMAIL="travis-ci@travis";
      dh_make --createorig --addmissing --defaultless -y -p qdigidoc_${VERSION};
      dch --distribution $(lsb_release -cs) -v ${VERSION} "Release ${VERSION}.";
      dpkg-buildpackage -rfakeroot -us -uc;
      if [ "${IMAGE}" = "ubuntu:16.04" ]; then
        export COVERITY_SCAN_PROJECT_NAME="open-eid/qdigidoc";
        export COVERITY_SCAN_NOTIFICATION_EMAIL="raul@metsma.ee";
        export COVERITY_SCAN_BRANCH_PATTERN=coverity_scan;
        export COVERITY_SCAN_BUILD_COMMAND_PREPEND="cmake .";
        export COVERITY_SCAN_BUILD_COMMAND=make;
        wget -O - https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh | bash;
      fi;
      git clean -d -x -f';
  fi

before_deploy:
- export VERSION=${TRAVIS_TAG:1}
- cd ..
- mv qdigidoc qdigidoc-${VERSION}
- tar czf qdigidoc-${VERSION}.tar.gz --exclude-vcs qdigidoc-${VERSION}
deploy:
  provider: releases
  api_key: $GITHUB_ACCESS_TOKEN
  file: qdigidoc-${VERSION}.tar.gz
  skip_cleanup: true
  on:
    tags: true
    condition: "$TRAVIS_OS_NAME = linux"
